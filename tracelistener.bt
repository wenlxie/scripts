#!/usr/bin/env bpftrace
#include <net/sock.h>

BEGIN
{
    printf("Tracing __inet_lookup_listener()... Hit Ctrl-C to end.\n");
}

kprobe:__inet_lookup_listener
{
    time("%H:%M:%S ");
    printf("%-6d %-14s %llx:%-6d \n", pid,comm,  arg4, arg5);
 }

kretprobe: __inet_lookup_listener
{
    $sk = (struct sock *)retval;
    $inet_family = $sk->__sk_common.skc_family;

    if ($inet_family == AF_INET || $inet_family == AF_INET6) {
        $daddr = ntop(0);
        $saddr = ntop(0);
        if ($inet_family == AF_INET) {
            $daddr = ntop($sk->__sk_common.skc_daddr);
            $saddr = ntop($sk->__sk_common.skc_rcv_saddr);
        } else {
            $daddr = ntop(
                $sk->__sk_common.skc_v6_daddr.in6_u.u6_addr8);
            $saddr = ntop(
                $sk->__sk_common.skc_v6_rcv_saddr.in6_u.u6_addr8);
        }
        $lport = $sk->__sk_common.skc_num;
        $dport = $sk->__sk_common.skc_dport;

        // Destination port is big endian, it must be flipped
        //$dport = bswap($dport);

        time("%H:%M:%S ");
        printf("%-6d %-14s ", pid, comm);
        printf("%-39s %-5d %-39s %-5d ", $daddr, $dport, $saddr,
            $lport);


}}
